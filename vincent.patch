diff --git a/src/components/card/index.tsx b/src/components/card/index.tsx
index 10b3f87..da931c9 100644
--- a/src/components/card/index.tsx
+++ b/src/components/card/index.tsx
@@ -1,33 +1,36 @@
-import { Recipe, Ingredient } from "types";
+import { Recipe, Ingredient, isSpecialIngredient } from "types";
 
 type CardProps = {
-  recipe: Recipe
-}
+  recipe: Recipe;
+};
 
 export const Card = ({ recipe }: CardProps) => {
   return (
     <div className="flex border border-gray-200 bg-white/50 p-4">
       <div className="block space-y-2">
         <h2 className="text-2xl font-bold">{recipe.name}</h2>
-        <span className="mr-1 inline-block rounded bg-pink-200 py-1 px-2 text-xs font-semibold uppercase text-pink-600 last:mr-0">
-          {recipe.category}
-        </span>
+        {recipe.category && (
+          <span className="mr-1 inline-block rounded bg-pink-200 py-1 px-2 text-xs font-semibold uppercase text-pink-600 last:mr-0">
+            {recipe.category}
+          </span>
+        )}
 
         <h3 className="text-lg font-bold">Ingredients</h3>
         <ul className="list-inside list-disc px-1 text-sm">
-          {recipe.ingredients.map((ingredient: Ingredient /* Hier Sander! */) => (
-
-            // Op de property special geeft hij een fout, maar dus ook op unit, amount en ingredient.
-            // Dat zijn allevier weldegelijk properties van Ingredient, maar in Ingredient.ts heb je twee definities van Ingredient. 
-            <li>{ingredient.special}</li>
-
-          ))}
+          {recipe.ingredients.map((ingredient: Ingredient) => {
+            if (isSpecialIngredient(ingredient)) {
+              return <li>{ingredient.special}</li>;
+            }
+            return (
+              <li>
+                {ingredient.amount} {ingredient.unit} {ingredient.ingredient}
+              </li>
+            );
+          })}
         </ul>
 
         <h3 className="text-lg font-bold">Preparation</h3>
-        <div className="text-sm">
-          {recipe.preparation}
-        </div>
+        <div className="text-sm">{recipe.preparation}</div>
       </div>
     </div>
   );
diff --git a/src/components/navbar/index.tsx b/src/components/navbar/index.tsx
index 72ca725..5796bdb 100644
--- a/src/components/navbar/index.tsx
+++ b/src/components/navbar/index.tsx
@@ -9,10 +9,8 @@ const navbarStyles = {
     "block border-b border-gray-100 py-2 pr-4 pl-3 text-gray-700 hover:bg-gray-50 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white md:border-0 md:p-0 md:hover:bg-transparent md:hover:text-gray-500 md:dark:hover:bg-transparent md:dark:hover:text-white",
   active:
     "block rounded bg-blue-700 py-2 pr-4 pl-3 text-white dark:text-white md:bg-transparent md:p-0 md:text-gray-900 underline dark:md:text-white",
-  navOpen:
-    "block w-screen md:hidden",
-  navClosed:
-    "hidden"
+  navOpen: "block w-screen md:hidden",
+  navClosed: "hidden",
 };
 
 export const Navbar = () => {
@@ -61,7 +59,10 @@ export const Navbar = () => {
             />
           </svg>
         </button>
-        <div aria-hidden={!isNavOpen} className={isNavOpen ? navbarStyles.navOpen : navbarStyles.navClosed}>
+        <div
+          aria-hidden={!isNavOpen}
+          className={isNavOpen ? navbarStyles.navOpen : navbarStyles.navClosed}
+        >
           <ul>
             <li>
               <NavLink
@@ -114,6 +115,6 @@ export const Navbar = () => {
           </ul>
         </div>
       </div>
-    </nav >
+    </nav>
   );
-};
\ No newline at end of file
+};
diff --git a/src/pages/homepage/index.tsx b/src/pages/homepage/index.tsx
index c40b9f2..a0bfa10 100644
--- a/src/pages/homepage/index.tsx
+++ b/src/pages/homepage/index.tsx
@@ -3,19 +3,20 @@ import { useEffect, useState } from "react";
 import { Recipe } from "types/Recipe";
 
 const Homepage = () => {
-
-  let [items, setItems] = useState<Recipe[]>([]);
+  const [items, setItems] = useState<Recipe[]>([]);
 
   useEffect(() => {
     fetch("http://localhost:3000/api/recipes/popular")
       .then((response) => response.json())
-      .then(({ cocktails }) => setItems(cocktails))
+      .then(({ cocktails }) => setItems(cocktails));
   }, []);
 
   return (
     <main>
       <div className="mb-4 space-y-3 rounded border border-gray-200 bg-white/25 p-5 text-sm dark:bg-gray-100">
-        {items.map((recipe: Recipe) => <Card recipe={recipe} />)}
+        {items.map((recipe: Recipe) => (
+          <Card recipe={recipe} />
+        ))}
       </div>
     </main>
   );
diff --git a/src/types/Ingredient.ts b/src/types/Ingredient.ts
index 7140297..d374854 100644
--- a/src/types/Ingredient.ts
+++ b/src/types/Ingredient.ts
@@ -1,9 +1,17 @@
-export type Ingredient =
-  | {
-      unit: string;
-      amount: number;
-      ingredient: string;
-    }
-  | {
-      special: string;
-    };
+export type SpecialIngredient = {
+  special: string;
+};
+
+export type DefaultIngredient = {
+  unit: string;
+  amount: string;
+  ingredient: string;
+};
+
+export type Ingredient = SpecialIngredient | DefaultIngredient;
+
+export function isSpecialIngredient(
+  value: Ingredient
+): value is SpecialIngredient {
+  return Object.prototype.hasOwnProperty.call(value, "special");
+}
diff --git a/src/types/Recipe.ts b/src/types/Recipe.ts
index e04b252..63a46d0 100644
--- a/src/types/Recipe.ts
+++ b/src/types/Recipe.ts
@@ -3,7 +3,7 @@ import type { Ingredient } from "./Ingredient";
 export type Recipe = {
   name: string;
   glass: string;
-  category: string;
+  category?: string;
   ingredients: Ingredient[];
   garnish: string;
   preparation: string;
